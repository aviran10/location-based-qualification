version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    expose:
      - "5432"
    environment:
      POSTGRES_USER: admin        # DB username
      POSTGRES_PASSWORD: admin_pass  # Password
      POSTGRES_DB: SampleadDB
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"  # Exposes PostgreSQL on port 5432
    networks:
      - app-network

  postgres_init:
    build:
      context: .  # Set the build context to the root of the project
      dockerfile: postgres_db/Dockerfile  # Specify the path to the Dockerfile inside the 'postgres_db' folder
    container_name: postgres_init
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres     # Point to the PostgreSQL service
      DB_PORT: 5432        # Default PostgreSQL port
      DB_NAME: SampleadDB
      DB_USER: admin
      DB_PASSWORD: admin_pass
    volumes:
      - ./db_data:/app/db_data     # path to JSON files
    command: ["python", "./postgres_db/init_postgres.py"]
    networks:
      - app-network
    # We will not start this service automatically; we'll start it manually.

  match_prospect:
    build:
      context: .
      dockerfile: Dockerfile.matcher
    container_name: match_prospect_service
    depends_on:
      - postgres
      - postgres_init  # Ensure it depends on postgres and postgres_init
    environment:
      DB_HOST: postgres     # Point to the PostgreSQL service
      DB_PORT: 5432        # Default PostgreSQL port
      DB_NAME: SampleadDB
      DB_USER: admin
      DB_PASSWORD: admin_pass
    volumes:
      - ./db_data:/app/db_data     # path to CSV and JSON files
    networks:
      - app-network
    # Comment out the command here to prevent automatic start
    # command: [ "python", "/app/match_prospect.py" ]
    # entrypoint: ["sh", "-c", "/app/scripts/wait-for-it.sh postgres:5432 -- python /app/match_prospect.py"]

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
